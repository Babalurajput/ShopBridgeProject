@model ShopBridgee.Models.Sale

@{
    ViewBag.Title = "Create";
}

    <style>
        /*body {
            font-family: Arial;
            color: white;
        }*/
        .split {
            height: 100%;
            width: 50%;
            position: fixed;
            z-index: 1;
            top: 0;
            overflow-x: hidden;
            padding-top: 20px;
        }
        .left {
            left: 0;
            background-color: #807b7b;
        }
        .right {
            right: 0;
            background-color: #807b7b;
        }
        .centered {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
        }

            .centered img {
                width: 150px;
                border-radius: 50%;
            }
    </style>



@using (Html.BeginForm("Create", "Sales", FormMethod.Post, new { @id = "form", enctype = "multipart/form-data" }))
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">

        function validateForm() {
            debugger
            if ($("#Name").val() == "" || $("#Name").val() == null) {
                alert("Enter The Name.");
                return false;
            } else {
                if (!isNaN($("#Name").val())) {
                    alert("Do not enter number in name textbox");
                    return false;
                }
            }
            if ($("#Description").val() == "" || $("#Description").val() == null) {
                alert("Enter The Description.");
                return false;
            }
            if ($("#Price").val() == "" || $("#Price").val() == null) {
                alert("Enter the Price.");
                return false;
            }
            else {
                form.submit();
            }
        }
        function ShowPreview(input) {
            if (input.files && input.files[0]) {
                var ImageDir = new FileReader();
                ImageDir.onload = function (e) {
                    $('#impPrev').attr('src', e.target.result);
                }
                ImageDir.readAsDataURL(input.files[0]);
            }
        }
    </script>

    @Html.AntiForgeryToken()


    <div class="split left">
        <div class="centered">
            <div class="form-horizontal">
                <h2> Enter Item </h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Image)
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="submit" type="submit" value="Create" onclick="return validateForm();" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="split right">
        <div class="centered">
            <div class="form-horizontal">
                <img src=" " id="impPrev" Height="200px" />
                <input type="file" name="fileUpload" id="fileUpload" style="width: 100%;" onchange="ShowPreview(this)" /> <br />
            </div>
            <p>Upload Item</p>
        </div>
        </div>
}
<div>
            @Html.ActionLink("Back to List", "Index")
</div>


